From 00906759053986b8079985644172085f74331f83 Mon Sep 17 00:00:00 2001
From: David Kilzer <ddkilzer@apple.com>
Date: Tue, 26 Jan 2016 16:57:03 -0800
Subject: Heap-based buffer-underreads due to xmlParseName

For https://bugzilla.gnome.org/show_bug.cgi?id=759573

* parser.c:
(xmlParseElementDecl): Return early on invalid input to fix
non-minimized test case (759573-2.xml).  Otherwise the parser
gets into a bad state in SKIP(3) at the end of the function.
(xmlParseConditionalSections): Halt parsing when hitting invalid
input that would otherwise caused xmlParserHandlePEReference()
to recurse unexpectedly.  This fixes the minimized test case
(759573.xml).

* result/errors/759573-2.xml: Add.
* result/errors/759573-2.xml.err: Add.
* result/errors/759573-2.xml.str: Add.
* result/errors/759573.xml: Add.
* result/errors/759573.xml.err: Add.
* result/errors/759573.xml.str: Add.
* test/errors/759573-2.xml: Add.
* test/errors/759573.xml: Add.
---
 parser.c                       |  2 ++
 result/errors/759573-2.xml     |  0
 result/errors/759573-2.xml.err | 58 ++++++++++++++++++++++++++++++++++++++++++
 result/errors/759573-2.xml.str |  4 +++
 result/errors/759573.xml       |  0
 result/errors/759573.xml.err   | 31 ++++++++++++++++++++++
 result/errors/759573.xml.str   |  4 +++
 test/errors/759573-2.xml       |  9 +++++++
 test/errors/759573.xml         |  1 +
 9 files changed, 109 insertions(+)
 create mode 100644 result/errors/759573-2.xml
 create mode 100644 result/errors/759573-2.xml.err
 create mode 100644 result/errors/759573-2.xml.str
 create mode 100644 result/errors/759573.xml
 create mode 100644 result/errors/759573.xml.err
 create mode 100644 result/errors/759573.xml.str
 create mode 100644 test/errors/759573-2.xml
 create mode 100644 test/errors/759573.xml

Index: libxml2-2.9.3+dfsg1/parser.c
===================================================================
--- libxml2-2.9.3+dfsg1.orig/parser.c	2016-06-03 08:05:01.531724616 -0400
+++ libxml2-2.9.3+dfsg1/parser.c	2016-06-03 08:05:01.527724569 -0400
@@ -6693,6 +6693,7 @@
 	if (!IS_BLANK_CH(CUR)) {
 	    xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
 		           "Space required after 'ELEMENT'\n");
+	    return(-1);
 	}
         SKIP_BLANKS;
         name = xmlParseName(ctxt);
@@ -6844,6 +6845,7 @@
 
 	    if ((CUR_PTR == check) && (cons == ctxt->input->consumed)) {
 		xmlFatalErr(ctxt, XML_ERR_EXT_SUBSET_NOT_FINISHED, NULL);
+		xmlHaltParser(ctxt);
 		break;
 	    }
 	}
